<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title/><link>https://blog.ooooo.space/</link><description>Recent content on</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 19 Jan 2024 20:05:42 +0800</lastBuildDate><atom:link href="https://blog.ooooo.space/feed.xml" rel="self" type="application/rss+xml"/><item><title>gh/glab 命令快速上手</title><link>https://blog.ooooo.space/p/gh_glab/</link><pubDate>Fri, 19 Jan 2024 20:05:42 +0800</pubDate><guid>https://blog.ooooo.space/p/gh_glab/</guid><description>&lt;img src="https://cdn.jsdelivr.net/gh/shelken/picbed@main/uPic/2025-03/4uQN13-1qOq7y.png" alt="Featured image of post gh/glab 命令快速上手" />&lt;h1 id="目的">目的
&lt;/h1>&lt;ul>
&lt;li>快速创建 github 或者 gitlab 仓库，只使用命令行 gh 和 glab 的官方 cli 工具&lt;/li>
&lt;/ul>
&lt;h1 id="安装">安装
&lt;/h1>&lt;h2 id="macos">macOS
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">brew install gh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">brew install glab
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="命令">命令
&lt;/h1>&lt;h2 id="认证">认证
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">gh auth login
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://gcore.jsdelivr.net/gh/shelken/picbed@main/uPic/2024-01/iqb5Cp.png"
loading="lazy"
alt="iqb5Cp"
>&lt;/p>
&lt;blockquote>
&lt;p>这里去 &lt;a class="link" href="https://github.com/settings/tokens" target="_blank" rel="noopener"
>token页面&lt;/a> 创建所需 scopes 的 token&lt;/p>&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">glab auth login
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://gcore.jsdelivr.net/gh/shelken/picbed@main/uPic/2024-01/oJfKuG.png"
loading="lazy"
alt="oJfKuG"
>&lt;/p>
&lt;blockquote>
&lt;p>gitlab 如果是自建的可以选择自定义 hostname&lt;/p>&lt;/blockquote>
&lt;h2 id="显示信息">显示信息
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 列出repo信息&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">gh repo list
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">glab repo list
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## gitlab 如果是自建的，执行前先把host设为你自建的, -g为全局&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">glab config &lt;span class="nb">set&lt;/span> -g host xxxx.xxxx.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 搜索&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 搜索名为xxx的库&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">glab repo search -s xxx
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看项目的README信息&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">gh repo view
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">glab repo view
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="创建与变更仓库">创建与变更仓库
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 克隆下某个仓库&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">gh repo clone xxx/xxxx
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">glab repo clone xxx/xxxx
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">glab repo clone https://xxxxx
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">glab repo clone &lt;span class="o">[&lt;/span>id&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 创建&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## gh&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">### 此时目录下有个test-create-repo目录，test-create-repo 已经是个git仓库&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">### 将 test-create-repo 以私有的形式推送到github，此时gh会在远程创建一个test-create-repo的仓库&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">gh repo create --private --source&lt;span class="o">=&lt;/span>test-create-repo --push
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">### 创建一个 test-repo-create2 私密仓库，添加readme和描述，如下图。并克隆到本地&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">gh repo create test-repo-create2 -c --private --add-readme -d &lt;span class="s2">&amp;#34;测试远程仓库创建并克隆到本地&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## glab&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">### 在个人空间下创建私密仓库，create后面为路径以及在当前目录下的目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">glab repo create test-create-repo --private -n test-create-repo -d &lt;span class="s2">&amp;#34;测试在个人空间下创建私密仓库&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">### 指定 组/空间&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">glab repo create test-create-repo -n test-create-repo -g xxx -d &lt;span class="s2">&amp;#34;测试在xxx组下创建仓库&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">### 进入git目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">glab repo create -n test-create-repo -d &lt;span class="s2">&amp;#34;描述&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 同步上游（如果fork其他仓库）&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">gh repo sync shelken/test-create-repo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 改变仓库的可见&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 将当前目录对应仓库转为公开&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">gh repo edit --visibility public
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 将指定仓库的可见性转为私密&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">gh repo edit shelken/test-create-repo --visibility private
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 删除&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">gh repo delete --yes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">gh repo delete xxx/xxxx --yes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 指定 空间/repo 删除&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">glab repo delete xxx/xxxx -y
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 指定 本人/repo 删除&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">glab repo delete xxxx -y
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 本目录对应repo删除&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">glab repo delete -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://gcore.jsdelivr.net/gh/shelken/picbed@main/uPic/2024-01/VdIPIR.png"
loading="lazy"
alt="VdIPIR"
>&lt;/p></description></item><item><title>简单地使用开源的输入法 rime</title><link>https://blog.ooooo.space/p/%E7%AE%80%E5%8D%95%E5%9C%B0%E4%BD%BF%E7%94%A8%E5%BC%80%E6%BA%90%E7%9A%84%E8%BE%93%E5%85%A5%E6%B3%95-rime/</link><pubDate>Sun, 19 Nov 2023 21:21:57 +0800</pubDate><guid>https://blog.ooooo.space/p/%E7%AE%80%E5%8D%95%E5%9C%B0%E4%BD%BF%E7%94%A8%E5%BC%80%E6%BA%90%E7%9A%84%E8%BE%93%E5%85%A5%E6%B3%95-rime/</guid><description>&lt;img src="https://gcore.jsdelivr.net/gh/shelken/picbed@main/uPic/2023-11/kFmrVz.png" alt="Featured image of post 简单地使用开源的输入法 rime" />&lt;blockquote>
&lt;p>这个项目帮助你：不需要配置复杂的配置；使用 git 来同步你的配置；及时地更新社区维护的词库&lt;/p>&lt;/blockquote>
&lt;p>&lt;a class="link" href="https://github.com/Mark24Code/rime-auto-deploy" target="_blank" rel="noopener"
>仓库地址Rime auto deploy&lt;/a>&lt;/p>
&lt;p>可以在项目的 readme 了解基本的用法，例如安装，升级等操作。这里我主要就常用的几个操作进行介绍来快速入门。&lt;/p>
&lt;h1 id="安装到你的新设备">安装到你的新设备
&lt;/h1>&lt;p>在进行安装前，你应该将这个项目 fork 下来，方便我们后续的修改配置和同步配置&lt;/p>
&lt;p>这里你只需要看项目的操作&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/Mark24Code/rime-auto-deploy#macoslinux-%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95" target="_blank" rel="noopener"
>MacOS/Linux 使用方法&lt;/a> 这里告诉你基本的在新的设备上安装操作。记得 clone 自己的项目地址&lt;/li>
&lt;/ul>
&lt;h1 id="配置">配置
&lt;/h1>&lt;h2 id="流程">流程
&lt;/h2>&lt;blockquote>
&lt;p>当你需要自定义一些配置时，你只需要关注一个目录，那就是 custom 目录&lt;/p>&lt;/blockquote>
&lt;ol>
&lt;li>修改在 custom 目录下的配置文件&lt;/li>
&lt;li>重新运行 &lt;code>installer. rb&lt;/code> ，选 2 手动模式，再选 4，复制你的配置到 rime 的配置。&lt;/li>
&lt;li>然后重新部署 rime。快捷键 &lt;code>alt + ctrl + ` &lt;/code>&lt;/li>
&lt;li>git add commit push&lt;/li>
&lt;/ol>
&lt;h2 id="切换你的输入方案">切换你的输入方案
&lt;/h2>&lt;p>如果你是个双拼用户，那么可以按 &lt;code>ctrl + `&lt;/code> 来让切换你的双拼方案&lt;/p>
&lt;h2 id="切换输入法时保存已经输入的字符">切换输入法时保存已经输入的字符
&lt;/h2>&lt;p>有时候，在输入中文时突然想要切换到英文。我的习惯是直接按右 &lt;code>Shift&lt;/code> 来切换，但是初次使用时发现已经输入的字被清除了，这个时候需要在 &lt;code>custom/default.custom.yaml&lt;/code> 去修改
在你的 &lt;code>switch_key.Shift_R&lt;/code> 下，从 &lt;code>clear&lt;/code> 改为 &lt;code>commit_code&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://gcore.jsdelivr.net/gh/shelken/picbed@main/PicGo/2023-11/c76a8a82.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h2 id="在不同的应用中自动切换为中文或者英文输入法">在不同的应用中自动切换为中文或者英文输入法
&lt;/h2>&lt;p>在 &lt;code>custom/squirrel.custom.yaml&lt;/code> 中添加你所安装的应用的配置，如下：&lt;/p>
&lt;p>&lt;img src="https://gcore.jsdelivr.net/gh/shelken/picbed@main/PicGo/2023-11/aec9b6da.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h2 id="不同设备同步词库">不同设备同步词库
&lt;/h2>&lt;p>在你的 &lt;code>/Users/[yourname]/Library/Rime&lt;/code> 目录下应该有 &lt;code>installation.yaml&lt;/code> 文件，编辑它，将 &lt;code>installation_id&lt;/code> 改为你喜欢的任意唯一的名，例如当前设备的名。在文件末尾加上 &lt;code>sync_dir: &amp;quot;xxxx&amp;quot;&lt;/code> ，xxxx 为你需要存放的目录，例如 iCloud 云目录。保存后，点击同步用户数据，即可在存放的目录下看到 &lt;code>installation_id&lt;/code> 为名的目录。&lt;/p>
&lt;p>&lt;img src="https://gcore.jsdelivr.net/gh/shelken/picbed@main/uPic/2024-01/DiQ1mQ.png"
loading="lazy"
alt="DiQ1mQ"
>&lt;/p>
&lt;h1 id="参考">参考
&lt;/h1>&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/shelken/rime-auto-deploy" target="_blank" rel="noopener"
>我的配置&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://dvel.me/posts/rime-ice/" target="_blank" rel="noopener"
>雾凇拼音配置&lt;/a>
️&lt;/li>
&lt;/ul></description></item><item><title>在不用Tailscale的情况下使用Tailscale</title><link>https://blog.ooooo.space/p/%E5%9C%A8%E4%B8%8D%E7%94%A8tailscale%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%E4%BD%BF%E7%94%A8tailscale/</link><pubDate>Wed, 05 Apr 2023 17:12:29 +0800</pubDate><guid>https://blog.ooooo.space/p/%E5%9C%A8%E4%B8%8D%E7%94%A8tailscale%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%E4%BD%BF%E7%94%A8tailscale/</guid><description>&lt;img src="https://gcore.jsdelivr.net/gh/shelken/picbed@main/uPic/2023-11/gyzvPb.png" alt="Featured image of post 在不用Tailscale的情况下使用Tailscale" />&lt;p>众所周知，headscale 可以解决 Tailscale 的一些限制，例如设备数。但是 headscale 部署需要一个公网 IP。最近，Tailscale 的 Funnel 进入 beta 测试了，刚好又看到一个大佬写了一篇利用 Tailscale 的 Funnel，将本地部署的 headscale 开放到公网的文章 &lt;a class="link" href="https://tailscale.dev/blog/headscale-funnel" target="_blank" rel="noopener"
>Using Tailscale without using Tailscale&lt;/a>。这意味着我们可以使用 Tailscale 让人们通过互联网访问我们搭建的 headscale，并且只使用 headscale 来让设备加入节点。感觉有点像背叛 Tailscale 官方啊，可怜三秒。&lt;/p>
&lt;p>接下来简单介绍一下操作步骤。&lt;/p>
&lt;ol>
&lt;li>先在任意一台自己的本地机器起一个最新稳定版 Tailscale。&lt;/li>
&lt;/ol>
&lt;p>安装命令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">curl -fsSL https://tailscale.com/install.sh &lt;span class="p">|&lt;/span> sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>再起一个 headscale，这里我用 docker-compose 部署，这里我大部分参考了官方的&lt;a class="link" href="https://github.com/juanfont/headscale/blob/main/docs/running-headscale-container.md" target="_blank" rel="noopener"
>教程&lt;/a>
另外，单独起了一个 &lt;a class="link" href="https://github.com/iFargle/headscale-webui/blob/main/SETUP.md#docker-compose" target="_blank" rel="noopener"
>webui&lt;/a> 方便查看&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;3.8&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">services&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">headscale&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;headscale/headscale:latest&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">container_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">headscale&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">/data/docker/headscale/config:/etc/headscale/&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">TZ=Asia/Shanghai&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s1">&amp;#39;9090:9090&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s1">&amp;#39;8080:8080&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">restart&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">always&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">command&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">headscale serve&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">headscale-webui&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ghcr.io/ifargle/headscale-webui:latest&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">container_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">headscale-webui&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">restart&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">always&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s1">&amp;#39;8083:5000&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">TZ=Asia/Shanghai&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">COLOR=red &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Use the base colors (ie, no darken-3, etc) -&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">HS_SERVER=http://headscale:8080 &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Reachable endpoint for your Headscale server&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">DOMAIN_NAME=http://headscale-webui:5000 &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># The base domain name for this container.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">SCRIPT_NAME=/admin &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># This is your applications base path (wsgi requires the name &amp;#34;SCRIPT_NAME&amp;#34;). Remove if you are hosing at the root /&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">KEY=&amp;#34;&amp;#34; &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Generate with &amp;#34;openssl rand -base64 32&amp;#34; - used to encrypt your key on disk.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">AUTH_TYPE= &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># AUTH_TYPE is either Basic or OIDC. Empty for no authentication&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">LOG_LEVEL=info &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Log level. &amp;#34;DEBUG&amp;#34;, &amp;#34;ERROR&amp;#34;, &amp;#34;WARNING&amp;#34;, or &amp;#34;INFO&amp;#34;. Default &amp;#34;INFO&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># ENV for Basic Auth (Used only if AUTH_TYPE is &amp;#34;Basic&amp;#34;). Can be omitted if you aren&amp;#39;t using Basic Auth&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">BASIC_AUTH_USER=user &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Used for basic auth&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">BASIC_AUTH_PASS=pass &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Used for basic auth&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># ENV for OIDC (Used only if AUTH_TYPE is &amp;#34;OIDC&amp;#34;). Can be omitted if you aren&amp;#39;t using OIDC&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">OIDC_AUTH_URL=https://auth.$DOMAIN/.well-known/openid-configuration&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># URL for your OIDC issuer&amp;#39;s well-known endpoint&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">OIDC_CLIENT_ID=headscale-webui &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Your OIDC Issuer&amp;#39;s Client ID for Headscale-WebUI&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">OIDC_CLIENT_SECRET=YourSecretHere &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Your OIDC Issuer&amp;#39;s Secret Key for Headscale-WebUI&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">/data/docker/headscale/web-ui/data:/data &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Headscale-WebUI&amp;#39;s storage. Make sure ./volume is readable by UID 1000 (chown 1000:1000 ./volume)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">/data/docker/headscale/config/:/etc/headscale/:ro&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Headscale&amp;#39;s config storage location. Used to read your Headscale config.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>然后执行 Tailscale funnel 命令，将 headscale 开放到公网&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">tailscale serve tls-terminated-tcp:443 tcp://127.0.0.1:8080
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tailscale funnel 443 on
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># 证书认证
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tailscale cert [被分配的domain]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="4">
&lt;li>其他客户端使用&lt;/li>
&lt;/ol>
&lt;p>ios 端现在已经也可以自定义 login-server，在设置里面填入自己的 headscale 地址
其他端直接命令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">tailscale login --login-server https://xxx.xxx.ts.net
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Asciinema的初次使用</title><link>https://blog.ooooo.space/p/asciinema%E7%9A%84%E5%88%9D%E6%AC%A1%E4%BD%BF%E7%94%A8/</link><pubDate>Sun, 05 Mar 2023 03:04:46 +0800</pubDate><guid>https://blog.ooooo.space/p/asciinema%E7%9A%84%E5%88%9D%E6%AC%A1%E4%BD%BF%E7%94%A8/</guid><description>&lt;img src="https://gcore.jsdelivr.net/gh/shelken/picbed@main/uPic/2023-11/hqH7rN.png" alt="Featured image of post Asciinema的初次使用" />&lt;h2 id="测试">测试
&lt;/h2>&lt;p>测试&lt;/p>
&lt;script src="https://blog.ooooo.space/js/asciinema-player.min.2c60ef900d7e2945f30ee44da8d28712.js">&lt;/script>
&lt;link rel="stylesheet" type="text/css" href="https://blog.ooooo.space/css/asciinema-player.min.769c38c8638dc8c9915bb6e6ef523e8b.css" />&lt;div id="demo1">&lt;/div>
&lt;script>
AsciinemaPlayer.create("https://asciinema.org/a/564652.cast", document.getElementById('demo1'), {
"autoPlay": false ,"idleTimeLimit": 2 ,"loop": false ,"poster": "npt:0:01","rows": 24 ,"speed": 1 ,"theme": "monokai",
});
&lt;/script>
&lt;noscript>&lt;blockquote>&lt;p>To run this asciicast without javascript, use &lt;code>asciinema play https://asciinema.org/a/564652.cast&lt;/code> with &lt;a href="https://asciinema.org/">Asciinema&lt;/a>&lt;/p>&lt;/blockquote>&lt;/noscript></description></item><item><title>解决字幕组命名不规范问题：使用Episode-ReName工具</title><link>https://blog.ooooo.space/p/%E8%A7%A3%E5%86%B3%E5%AD%97%E5%B9%95%E7%BB%84%E5%91%BD%E5%90%8D%E4%B8%8D%E8%A7%84%E8%8C%83%E9%97%AE%E9%A2%98%E4%BD%BF%E7%94%A8episode-rename%E5%B7%A5%E5%85%B7/</link><pubDate>Sun, 15 May 2022 00:00:00 +0000</pubDate><guid>https://blog.ooooo.space/p/%E8%A7%A3%E5%86%B3%E5%AD%97%E5%B9%95%E7%BB%84%E5%91%BD%E5%90%8D%E4%B8%8D%E8%A7%84%E8%8C%83%E9%97%AE%E9%A2%98%E4%BD%BF%E7%94%A8episode-rename%E5%B7%A5%E5%85%B7/</guid><description>&lt;img src="https://gcore.jsdelivr.net/gh/shelken/picbed@main/uPic/2023-11/0sko2h.jpg" alt="Featured image of post 解决字幕组命名不规范问题：使用Episode-ReName工具" />&lt;h1 id="材料">材料
&lt;/h1>&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/Nriver/Episode-ReName" title="Episode-ReName"
target="_blank" rel="noopener"
>Episode-ReName&lt;/a>（以下简称 er）&lt;/li>
&lt;li>&lt;a class="link" href="https://zh.wikipedia.org/zh-cn/QBittorrent" title="qBittorrent"
target="_blank" rel="noopener"
>qBittorrent&lt;/a>（以下简称 qb）&lt;/li>
&lt;/ul>
&lt;h1 id="背景">背景
&lt;/h1>&lt;p>很多字幕组种子的命名格式往往不是按照&lt;code>SxxExx&lt;/code>的格式来命名的，而 Emby，Plex 等媒体服务器都是以识别&lt;code>SxxExx&lt;/code>来刮削剧集的元数据。因此为了让这些媒体服务器识别剧集，我们往往需要重命名下载的文件。&lt;/p>
&lt;h1 id="期望">期望
&lt;/h1>&lt;p>qb 下载剧集后，自动将不符合的资源名命名为形如&lt;code>'剧集名 - SxxExx.mp4'&lt;/code>&lt;/p>
&lt;h1 id="实践">实践
&lt;/h1>&lt;h2 id="流程">流程
&lt;/h2>&lt;ol>
&lt;li>克隆 er 源代码,使用 pyinstaller 将 EpisodeReName.py 编译成可执行程序。（作者在原仓库有提供 windows 的，win 用户可以直接下载使用，我是 linux 环境，因此自己编译）,将可执行程序放到你想要它在的文件夹下面（我直接上传群晖下的文件夹）&lt;/li>
&lt;li>设置 qb 下的「Torrent 完成时运行外部程序」，填入程序路径和必要参数&lt;/li>
&lt;/ol>
&lt;h2 id="编译可执行程序">编译可执行程序
&lt;/h2>&lt;p>win 用户跳过此步骤，直接在原仓库下载作者提供的程序；linux 用户可以直接在本地使用 pyinstaller 来操作编译（docker 也行）。如果是 mac 用户则可以使用 docker 镜像来编译 linux 程序。m1 用户建议换台电脑，目前 docker 镜像编译有问题&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /你的工作目录
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 拉取源代码&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git clone https://github.com/Nriver/Episode-ReName.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> Episode-ReName
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 安装所需 requirements （requirements中包含了pyinstaller，如果是docker编译，可以把pyinstaller去掉）&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pip3 install -r requirements.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 编译（非docker方式）&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pyinstaller -F EpisodeReName.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 编译（docker方式）&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker run -v &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>&lt;span class="nb">pwd&lt;/span>&lt;span class="k">)&lt;/span>&lt;span class="s2">:/src/&amp;#34;&lt;/span> cdrx/pyinstaller-linux
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 移动编译后程序到你想要的文件夹。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mv ./dist/linux/EpisodeReName anywhere
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 我是在mac上编译的，因此把它复制到我的群晖上&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">scp ./dist/linux/EpisodeReName shelken@192.168.0.80:/volume1/docker/qb-web/script/Episode-ReName/dist/EpisodeReName
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="设置-qb-执行程序">设置 qb 执行程序
&lt;/h2>&lt;p>打开工具-&amp;gt;选项-&amp;gt;下载。开启「Torrent 完成时运行外部程序」，填入你的程序地址&lt;/p>
&lt;p>&lt;img src="https://gcore.jsdelivr.net/gh/shelken/picbed@main/PicGo/2023-11/a8fd15af.png"
loading="lazy"
alt="image-20220515171458914"
>&lt;/p>
&lt;p>参数解释：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">qb参数：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">%F：如果种子是单文件的，那么输出则为：/保存路径/xxxxx.mp4；如果是多文件。那么则会是: /保存路径/根目录名。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">er参数：（这部分详细可以去看原文档，这里只介绍我使用的）
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--path：目标路径，可以是单文件，可以是目录，目录会处理所有该目录下文件
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--delay: 延迟多久操作，默认为0秒不等待，这个参数主要是配合qbitorrent使用, 避免qb锁定文件导致重命名失败. 一般停止做种15秒后在操作能确保文件被释放
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--name_format：自定义重命名格式, 参数需要加引号 默认为 &amp;#34;S{season}E{ep}&amp;#34; 可以选择性加入 series系列名称 如 &amp;#34;{series} - S{season}E{ep}&amp;#34;。这里我使用了第二种格式。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">举例:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/volume1/docker/qb-web/script/Episode-ReName/dist/EpisodeReName --path=&amp;#34;%F&amp;#34; --delay=15 --name_format=&amp;#34;{series} - S{season}E{ep}&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="技巧">技巧
&lt;/h1>&lt;h2 id="查看-qb-日志">查看 qb 日志
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># volume1：取决于你套件安装在哪个存储空间&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cat /volume1/&lt;span class="se">\@&lt;/span>appstore/qBittorrent/qBittorrent_conf/data/logs/qbittorrent.log
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="给可执行程序赋权">给可执行程序赋权
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 如果不能执行程序，尝试给EpisodeReName执行程序赋予可执行权限&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chmod +x /所在目录/EpisodeReName
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="多季番剧tmdb集数适配">多季番剧tmdb集数适配
&lt;/h2>&lt;p>对于有多季的番剧, 比如鬼灭之刃28集, 在tmdb里没有第28集, 而是第2季第2集, 要正确削刮需要从S02E28改成S02E02.&lt;/p>
&lt;p>这时候可以在鬼灭之刃的&lt;code>Season 2&lt;/code>文件夹中添加一个&lt;code>all.txt&lt;/code>文件, 里面写上一个数字, 会在自动重命名的时候减掉这个数字. 比如上面的例子就需要在&lt;code>all.txt&lt;/code>填入26, 自动重命名就会把S02E28改成S02E02, 这样就能正常削刮了.&lt;/p>
&lt;h1 id="注意">注意
&lt;/h1>&lt;h2 id="文件夹命名格式">文件夹命名格式
&lt;/h2>&lt;p>剧名和季数是根据文件夹命名来识别的，集数是根据文件名的数字。&lt;/p>
&lt;h3 id="剧名与季数">剧名与季数
&lt;/h3>&lt;p>形如：/剧集目录/剧名/Season 1/&lt;/p>
&lt;p>季数命名格式要求：Season1 / Season 1 / s1 / S1&lt;/p>
&lt;p>举例：/volume1/Video/watch/夏日重现/s1&lt;/p>
&lt;h3 id="集数">集数
&lt;/h3>&lt;p>形如：/剧集目录/剧名/Season 1/xxxx[01]xxxxxx.mp4&lt;/p>
&lt;p>集数命名匹配的正则：会匹配在括号（各种括号）内的数字，数字规则如下，以找到的第一个符合项作为集数&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">patterns&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 1到4位数字&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;(\d{1,4}(\.5)?)&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 特殊文字处理&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;第(\d{1,4}(\.5)?)集&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;第(\d{1,4}(\.5)?)话&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;第(\d{1,4}(\.5)?)話&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;[Ee][Pp](\d{1,4}(\.5 &amp;#34;Ee][Pp&amp;#34;)?)&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;[Ee](\d{1,4}(\.5 &amp;#34;Ee&amp;#34;)?)&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 兼容SP01等命名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;[Ss][Pp](\d{1,4}(\.5 &amp;#34;Ss][Pp&amp;#34;)?)&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 兼容v2命名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;(\d{1,4}(\.5)?)[Vv]?\d?&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>举例:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 输入：/volume1/Video/watch/夏日重现/s1/[Nekomoe kissaten][Summer Time Rendering][05][1080p][JPSC].mp4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 输出：/volume1/Video/watch/夏日重现/s1/夏日重现 - S01E05.mp4&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="做种问题">做种问题
&lt;/h2>&lt;p>qb 的「Torrent 完成时运行外部程序」功能，会在下载完资源的时候，立刻去执行程序，也就是说在下载完之后，我们的文件会被立刻重命名，这导致了我们做种会出现问题，因此我们无法做到下载后再把这个资源分享给其他人。目前也没有好的方式解决。可以考虑不是呀 qb 的这个功能，直接定时任务去执行程序，扫描固定的目录来重命名。&lt;/p></description></item><item><title>qBittorrent的RSS订阅下载指南</title><link>https://blog.ooooo.space/p/qbittorrent%E7%9A%84rss%E8%AE%A2%E9%98%85%E4%B8%8B%E8%BD%BD%E6%8C%87%E5%8D%97/</link><pubDate>Sat, 14 May 2022 00:00:00 +0000</pubDate><guid>https://blog.ooooo.space/p/qbittorrent%E7%9A%84rss%E8%AE%A2%E9%98%85%E4%B8%8B%E8%BD%BD%E6%8C%87%E5%8D%97/</guid><description>&lt;img src="https://gcore.jsdelivr.net/gh/shelken/picbed@main/uPic/2023-11/TrVKhx.png" alt="Featured image of post qBittorrent的RSS订阅下载指南" />&lt;h1 id="材料">材料
&lt;/h1>&lt;ul>
&lt;li>qBittorrent（&lt;a class="link" href="https://zh.wikipedia.org/zh-cn/QBittorrent" title="wiki"
target="_blank" rel="noopener"
>wiki&lt;/a>）（以下简称 qb）&lt;/li>
&lt;li>支持 rss 订阅的种子站（e.g. &lt;a class="link" href="https://nyaa.si/" title="nyaa"
target="_blank" rel="noopener"
>nyaa&lt;/a>(&lt;a class="link" href="https://zh.wikipedia.org/wiki/Nyaa_Torrents" title="wiki"
target="_blank" rel="noopener"
>wiki&lt;/a>)）&lt;/li>
&lt;/ul>
&lt;h1 id="实现">实现
&lt;/h1>&lt;ul>
&lt;li>
&lt;p>打开 qb 配置页面，我的是部署在群晖的 qb，因此使用 web 页面来管理；如果是程序也一样。将启用 rss 订阅打开，间隔与数目最大值根据自定，然后将下面的「自动下载」打开，打开后我们才能在 rss 订阅更新时自动下载你订阅的资源。&lt;/p>
&lt;p>&lt;img src="https://gcore.jsdelivr.net/gh/shelken/picbed@main/PicGo/2023-11/f1d3767f.png"
loading="lazy"
alt="image-20220514141431969"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>然后点右侧的 「RSS」&lt;/p>
&lt;p>&lt;img src="https://gcore.jsdelivr.net/gh/shelken/picbed@main/PicGo/2023-11/5b8d4dd7.png"
loading="lazy"
alt="image-20220514142037691"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>然后我们先离开一下 qb，去你需要订阅资源的 bt 下载站。这里以我自己的需求做演示，我们来到「nyaa」;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>首先，我确定了我需要的订阅的内容：是&lt;code>喵萌奶茶屋字幕组&lt;/code>翻译的&lt;code>夏日重现&lt;/code>，并只要 &lt;code>1080p&lt;/code> 的资源内容。这里我搜索「喵萌奶茶屋 夏日重现 1080p」，可以看到结果非常符合我的预期。因为字幕组的命名基本是固定的，所以这个搜索结果基本是稳定的。&lt;/p>
&lt;p>&lt;img src="https://gcore.jsdelivr.net/gh/shelken/picbed@main/PicGo/2023-11/4ef9fb73.png"
loading="lazy"
alt="image-20220514142759551"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>点击 RSS&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://gcore.jsdelivr.net/gh/shelken/picbed@main/PicGo/2023-11/6f61e324.png"
loading="lazy"
alt="image-20220514143533237"
>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>可以看到地址 url 变了，因此我们知道，只要在原来的内容加上&lt;code>page=rss&lt;/code>，那么就拿到我们的 &lt;code>rss&lt;/code> 订阅地址&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">原 url：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">https://nyaa.si/?f=0&amp;amp;c=0_0&amp;amp;q=%E5%96%B5%E8%90%8C%E5%A5%B6%E8%8C%B6%E5%B1%8B+%E5%A4%8F%E6%97%A5%E9%87%8D%E7%8E%B0+1080p
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">新 url:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">https://nyaa.si/?c=0_0&amp;amp;f=0&amp;amp;q=%E5%96%B5%E8%90%8C%E5%A5%B6%E8%8C%B6%E5%B1%8B+%E5%A4%8F%E6%97%A5%E9%87%8D%E7%8E%B0+1080p&amp;amp;page=rss
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;ul>
&lt;li>
&lt;p>回到 qb 界面，订阅 rss&lt;/p>
&lt;p>&lt;img src="https://gcore.jsdelivr.net/gh/shelken/picbed@main/PicGo/2023-11/6789a4a8.png"
loading="lazy"
alt="image-20220514150256737"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>然后打开&lt;code>rss下载器&lt;/code>，新建一个下载规则；这里我讲解一下规则定义。&lt;/p>
&lt;p>&lt;img src="https://gcore.jsdelivr.net/gh/shelken/picbed@main/PicGo/2023-11/b487994c.png"
loading="lazy"
alt="image-20220514150525225"
>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;code>空格&lt;/code>代表&lt;code>与&lt;/code>关系，即这些关键词都必须有才匹配上。&lt;code>|&lt;/code>代表&lt;code>或&lt;/code>关系，即只要有一个关键词命中就匹配，&lt;code>?&lt;/code>代表一个字符，&lt;code>*&lt;/code>代表 0 或多个字符。这里我们甚至可以使用正则表达式，能实现更加复杂的限制。&lt;/p>
&lt;p>这里我的&lt;code>必须包含&lt;/code>则进一步限制当前规则的下匹配资源的条件。&lt;code>必须不含&lt;/code>里的&lt;code>合集&lt;/code>则是考虑到字幕组会在番剧结束后打包一个合集目录，一次我们把带有&lt;code>合集&lt;/code>字样的资源排除掉。由于我之前下载过这些剧集，因此我把 1-3 的内容也排除掉。&lt;code>剧集过滤器&lt;/code>在这里是没用的，因为大部分番剧字幕组没有按照欧美剧集的格式来命名（形如：S01E01）。因此这里没有作用。&lt;code>分类&lt;/code>与&lt;code>保存目录&lt;/code>可以自定义。可能你的每个规则对应多个 rss 订阅，也可以只对应一个 rss 订阅，这里完全看自己习惯和方式，&lt;code>添加后不开始下载&lt;/code>这里我选择从不，这样会关联规则和订阅后，自动下载未下载过的匹配的订阅资源。&lt;code>布局&lt;/code>按全局就行，不是那么重要。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>然后将你&lt;code>配置好的规则&lt;/code>和你&lt;code>订阅的RSS链接&lt;/code>进行关联，保存&lt;/p>
&lt;p>&lt;img src="https://gcore.jsdelivr.net/gh/shelken/picbed@main/PicGo/2023-11/a9c9770d.png"
loading="lazy"
alt="image-20220514152624596"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>至此，你的 qb 每隔 xx 分钟去刷新订阅，当有新资源发布在种子网站时，qb 会自动下载符合你定义的资源，并保存在你定义的目录下。&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>优雅观看新番：B站客户端使用指南</title><link>https://blog.ooooo.space/p/%E4%BC%98%E9%9B%85%E8%A7%82%E7%9C%8B%E6%96%B0%E7%95%AAb%E7%AB%99%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</link><pubDate>Fri, 01 Apr 2022 00:00:00 +0000</pubDate><guid>https://blog.ooooo.space/p/%E4%BC%98%E9%9B%85%E8%A7%82%E7%9C%8B%E6%96%B0%E7%95%AAb%E7%AB%99%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</guid><description>&lt;img src="https://gcore.jsdelivr.net/gh/shelken/picbed@main/PicGo/2023-11/bcff2d81.jpg" alt="Featured image of post 优雅观看新番：B站客户端使用指南" />&lt;h2 id="声明">声明
&lt;/h2>&lt;p>不提供涉及 APP 的下载及其他使用教程&lt;/p>
&lt;h2 id="前提">前提
&lt;/h2>&lt;ol>
&lt;li>知道 QuanX 的基本使用逻辑，以及基本的概念&lt;/li>
&lt;li>有自我修改部分代码能力和上 github 或者其他托管代码平台的能力&lt;/li>
&lt;/ol>
&lt;h2 id="学习资源来源">学习资源来源
&lt;/h2>&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/NobyDa/Script" title="脚本原作者仓库"
target="_blank" rel="noopener"
>脚本原作者仓库&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/NobyDa/Script/blob/master/Surge/JS/Bili_Auto_Regions.js" title="Bili_Auto_Region脚本"
target="_blank" rel="noopener"
>Bili_Auto_Region 脚本&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="效果">效果
&lt;/h2>&lt;h3 id="效果-1">效果 1
&lt;/h3>&lt;ol>
&lt;li>进入 B 站客户端&lt;/li>
&lt;li>进入『首页』，点击『追番』&lt;/li>
&lt;li>找到番剧『进击的巨人最终季』&lt;img src="https://gcore.jsdelivr.net/gh/shelken/picbed@main/PicGo/2023-11/bcff2d81.jpg"
loading="lazy"
alt="19CC3738-4345-4CAB-896F-A21B8B051B7C_1_201_a"
>&lt;/li>
&lt;li>点击进入，脚本会自动将代理节点切换设置的代理分组&lt;img src="https://gcore.jsdelivr.net/gh/shelken/picbed@main/PicGo/2023-11/f842d577.jpg"
loading="lazy"
alt="9C12ABCB-933D-4C5D-8660-390BAFF3631B_1_201_a"
>&lt;/li>
&lt;li>如果出现『找不到页面』，点击页面的『重新加载』或刷新页面，进入番剧观看页面，正常观看&lt;img src="https://gcore.jsdelivr.net/gh/shelken/picbed@main/PicGo/2023-11/eba838c0.jpg"
loading="lazy"
alt="E0691890-CF30-4798-8B4C-4E3FBD6AB387_1_201_a"
>&lt;/li>
&lt;li>退出观看页，脚本自动切换为直连&lt;img src="https://gcore.jsdelivr.net/gh/shelken/picbed@main/PicGo/2023-11/24ec06dc.jpg"
loading="lazy"
alt="3D637A3B-F675-4DA0-B67E-E697B6FB1953_1_201_a"
>&lt;/li>
&lt;/ol>
&lt;h3 id="效果-2">效果 2
&lt;/h3>&lt;ol>
&lt;li>进入 B 站客户端&lt;/li>
&lt;li>点击『输入框』&lt;/li>
&lt;li>输入『进击的巨人 港』&lt;/li>
&lt;li>脚本自动切换代理分组&lt;/li>
&lt;li>页面显示『进击的巨人』番剧结果&lt;img src="https://gcore.jsdelivr.net/gh/shelken/picbed@main/PicGo/2023-11/60b7f5f4.jpg"
loading="lazy"
alt="941D38C8-4229-4899-9A34-9A25D070B229_1_201_a"
>&lt;/li>
&lt;li>点击『立即观看』，进入观看页&lt;/li>
&lt;/ol>
&lt;h2 id="优点">优点
&lt;/h2>&lt;ul>
&lt;li>不用再每次看港澳台番剧时自己手动切成全局，看完后又切换回规则模式，全自动。&lt;/li>
&lt;/ul>
&lt;h2 id="实践">实践
&lt;/h2>&lt;h3 id="准备">准备
&lt;/h3>&lt;ul>
&lt;li>带有 ios 系统的 iPhone&lt;/li>
&lt;li>一个 QuanX App&lt;/li>
&lt;li>『Bili_Auto_Region 脚本』&lt;/li>
&lt;/ul>
&lt;h3 id="修改原有脚本">修改原有脚本
&lt;/h3>&lt;ol>
&lt;li>
&lt;p>到『脚本原作者仓库』，fork 该仓库&lt;/p>
&lt;/li>
&lt;li>
&lt;p>加入『StreamingSE』规则集（必须）&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># 绑定相关select或static策略组，并且需要具有相关的区域代理服务器纳入您的子策略中，子策略可以是服务器也可以是其他区域策略组．
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/StreamingMedia/StreamingSE.list
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>设置该规则集的『策略偏好』为自己的『父策略组』（例如我设为 『BiliGroup』）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>添加几个子策略组（如台湾 or 香港）（这里涉及到策略组的节点选择策略，自己了解）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>修改 &lt;strong>Surge/JS/Bili_Auto_Regions.js&lt;/strong>，提交更改&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//找到如下代码块，删除如下中文，修改成自己创建的策略组名
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">Group&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">$&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;BiliArea_Policy&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="s1">&amp;#39;你的父策略组（BiliGroup）&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">//Your blibli policy group name.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">CN&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">$&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;BiliArea_CN&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="s1">&amp;#39;DIRECT&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">//Your China sub-policy name.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">TW&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">$&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;BiliArea_TW&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="s1">&amp;#39;台湾子策略组&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">//Your Taiwan sub-policy name.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">HK&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">$&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;BiliArea_HK&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="s1">&amp;#39;香港子策略组&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">//Your HongKong sub-policy name.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">DF&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">$&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;BiliArea_DF&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="s1">&amp;#39;请求失败后的策略组&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">//Sub-policy name used after region is blocked(e.g. url 404)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">off&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">$&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;BiliArea_disabled&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="s1">&amp;#39;在某些wifi下不转换策略组&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">//WiFi blacklist(disable region change), separated by commas.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">current&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">$&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getPolicy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">Group&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>在 &lt;strong>QuantumultX/&lt;/strong> 目录下（或其他目录），新增两个文件，一个『分流』，一个『重写』，举例：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">#『重写』引用：Bili_Region.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># start-------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">hostname = ap?.bilibili.com, ap?.biliapi.net
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">^https:\/\/ap(p|i)\.bili(bili|api)\.(com|net)\/(pgc\/view\/v\d\/app\/season|x\/v\d\/search\/defaultwords)\?access_key url script-response-body https://raw.githubusercontent.com/你的用户名/Script/master/Surge/JS/Bili_Auto_Regions.js
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># 适用于搜索指定地区的番剧（该脚本为『效果2』的实现，根据自身需要选择）
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">^https:\/\/ap(p|i)\.bili(bili|api)\.(com|net)\/x\/v\d\/search(\/type)?\?.+?%20(%E6%B8%AF|%E5%8F%B0|%E4%B8%AD)&amp;amp; url script-request-header https://raw.githubusercontent.com/你的用户名/Script/master/Surge/JS/Bili_Auto_Regions.js
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># end--------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#『分流』引用：Bili_Region.list
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># start-----------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ip-cidr, 203.107.1.1/24, reject
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># end--------------------
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>打开 App；将以上两个文件『分流』与『重写』分别引用；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>最后，在 QuanX -&amp;gt; 其他设置 -&amp;gt; VPN 中，关闭 MPM（温和策略机制）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>至此，所有需要做的都已经完成，此时，进入 B 站客户端，实现以上的效果&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="why">Why？
&lt;/h2>&lt;blockquote>
&lt;p>为什么？这部分将对『实践』中的部分操作做解释。&lt;/p>&lt;/blockquote>
&lt;ol>
&lt;li>
&lt;p>为什么 fork 仓库？&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">因为需要修改原脚本相关分组的名字，这部分由自己定义；而且涉及到『重写』与『分流』引用，虽然不是必须，但是强烈建议这样做；可以方便地管理这些规则的开关；
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>为什么关闭 MPM&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">主要是在切换策略时打断之前的连接，让策略生效（个人认为）
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="已知问题">已知问题
&lt;/h2>&lt;ol>
&lt;li>在长时间使用 B 站一段时间后，会发现脚本有失效情况，这个时候退出 B 站重新进入可以解决。&lt;/li>
&lt;/ol>
&lt;h2 id="最后">最后
&lt;/h2>&lt;p>如果有代码方面的时候问题，请到原作者脚本仓库上提 issue。&lt;/p>
&lt;p>如果有关于以上实践部分的问题，可以在下方评论提问。本教程也是参考了原脚本的注释部分，自己实践得来，建议在问之前把注释看一遍；不提供除实践部分之外的问题。如果是我知道的，我会提供关键词给你，然后请自己去问谷歌。&lt;/p></description></item><item><title>归档</title><link>https://blog.ooooo.space/archives/</link><pubDate>Sun, 06 Mar 2022 00:00:00 +0000</pubDate><guid>https://blog.ooooo.space/archives/</guid><description/></item><item><title>搜索</title><link>https://blog.ooooo.space/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.ooooo.space/search/</guid><description/></item><item><title>链接</title><link>https://blog.ooooo.space/%E9%93%BE%E6%8E%A5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.ooooo.space/%E9%93%BE%E6%8E%A5/</guid><description>&lt;p>To use this feature, add &lt;code>links&lt;/code> section to frontmatter.&lt;/p>
&lt;p>This page&amp;rsquo;s frontmatter:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">links&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">title&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">GitHub&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">description&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">GitHub is the world&amp;#39;s largest software development platform.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">website&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://github.com&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">title&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">TypeScript&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">description&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">TypeScript is a typed superset of JavaScript that compiles to plain JavaScript.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">website&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://www.typescriptlang.org&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ts-logo-128.jpg&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>image&lt;/code> field accepts both local and external images.&lt;/p></description></item></channel></rss>