<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>开源项目 on</title><link>https://blog.ooooo.space/tags/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/</link><description>Recent content in 开源项目 on</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 19 Nov 2023 21:21:57 +0800</lastBuildDate><atom:link href="https://blog.ooooo.space/tags/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/feed.xml" rel="self" type="application/rss+xml"/><item><title>简单地使用开源的输入法 rime</title><link>https://blog.ooooo.space/p/%E7%AE%80%E5%8D%95%E5%9C%B0%E4%BD%BF%E7%94%A8%E5%BC%80%E6%BA%90%E7%9A%84%E8%BE%93%E5%85%A5%E6%B3%95-rime/</link><pubDate>Sun, 19 Nov 2023 21:21:57 +0800</pubDate><guid>https://blog.ooooo.space/p/%E7%AE%80%E5%8D%95%E5%9C%B0%E4%BD%BF%E7%94%A8%E5%BC%80%E6%BA%90%E7%9A%84%E8%BE%93%E5%85%A5%E6%B3%95-rime/</guid><description>&lt;img src="https://gcore.jsdelivr.net/gh/shelken/picbed@main/uPic/2023-11/kFmrVz.png" alt="Featured image of post 简单地使用开源的输入法 rime" />&lt;blockquote>
&lt;p>这个项目帮助你：不需要配置复杂的配置；使用 git 来同步你的配置；及时地更新社区维护的词库&lt;/p>&lt;/blockquote>
&lt;p>&lt;a class="link" href="https://github.com/Mark24Code/rime-auto-deploy" target="_blank" rel="noopener"
>仓库地址Rime auto deploy&lt;/a>&lt;/p>
&lt;p>可以在项目的 readme 了解基本的用法，例如安装，升级等操作。这里我主要就常用的几个操作进行介绍来快速入门。&lt;/p>
&lt;h1 id="安装到你的新设备">安装到你的新设备
&lt;/h1>&lt;p>在进行安装前，你应该将这个项目 fork 下来，方便我们后续的修改配置和同步配置&lt;/p>
&lt;p>这里你只需要看项目的操作&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/Mark24Code/rime-auto-deploy#macoslinux-%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95" target="_blank" rel="noopener"
>MacOS/Linux 使用方法&lt;/a> 这里告诉你基本的在新的设备上安装操作。记得 clone 自己的项目地址&lt;/li>
&lt;/ul>
&lt;h1 id="配置">配置
&lt;/h1>&lt;h2 id="流程">流程
&lt;/h2>&lt;blockquote>
&lt;p>当你需要自定义一些配置时，你只需要关注一个目录，那就是 custom 目录&lt;/p>&lt;/blockquote>
&lt;ol>
&lt;li>修改在 custom 目录下的配置文件&lt;/li>
&lt;li>重新运行 &lt;code>installer. rb&lt;/code> ，选 2 手动模式，再选 4，复制你的配置到 rime 的配置。&lt;/li>
&lt;li>然后重新部署 rime。快捷键 &lt;code>alt + ctrl + ` &lt;/code>&lt;/li>
&lt;li>git add commit push&lt;/li>
&lt;/ol>
&lt;h2 id="切换你的输入方案">切换你的输入方案
&lt;/h2>&lt;p>如果你是个双拼用户，那么可以按 &lt;code>ctrl + `&lt;/code> 来让切换你的双拼方案&lt;/p>
&lt;h2 id="切换输入法时保存已经输入的字符">切换输入法时保存已经输入的字符
&lt;/h2>&lt;p>有时候，在输入中文时突然想要切换到英文。我的习惯是直接按右 &lt;code>Shift&lt;/code> 来切换，但是初次使用时发现已经输入的字被清除了，这个时候需要在 &lt;code>custom/default.custom.yaml&lt;/code> 去修改
在你的 &lt;code>switch_key.Shift_R&lt;/code> 下，从 &lt;code>clear&lt;/code> 改为 &lt;code>commit_code&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://gcore.jsdelivr.net/gh/shelken/picbed@main/PicGo/2023-11/c76a8a82.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h2 id="在不同的应用中自动切换为中文或者英文输入法">在不同的应用中自动切换为中文或者英文输入法
&lt;/h2>&lt;p>在 &lt;code>custom/squirrel.custom.yaml&lt;/code> 中添加你所安装的应用的配置，如下：&lt;/p>
&lt;p>&lt;img src="https://gcore.jsdelivr.net/gh/shelken/picbed@main/PicGo/2023-11/aec9b6da.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h2 id="不同设备同步词库">不同设备同步词库
&lt;/h2>&lt;p>在你的 &lt;code>/Users/[yourname]/Library/Rime&lt;/code> 目录下应该有 &lt;code>installation.yaml&lt;/code> 文件，编辑它，将 &lt;code>installation_id&lt;/code> 改为你喜欢的任意唯一的名，例如当前设备的名。在文件末尾加上 &lt;code>sync_dir: &amp;quot;xxxx&amp;quot;&lt;/code> ，xxxx 为你需要存放的目录，例如 iCloud 云目录。保存后，点击同步用户数据，即可在存放的目录下看到 &lt;code>installation_id&lt;/code> 为名的目录。&lt;/p>
&lt;p>&lt;img src="https://gcore.jsdelivr.net/gh/shelken/picbed@main/uPic/2024-01/DiQ1mQ.png"
loading="lazy"
alt="DiQ1mQ"
>&lt;/p>
&lt;h1 id="参考">参考
&lt;/h1>&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/shelken/rime-auto-deploy" target="_blank" rel="noopener"
>我的配置&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://dvel.me/posts/rime-ice/" target="_blank" rel="noopener"
>雾凇拼音配置&lt;/a>
️&lt;/li>
&lt;/ul></description></item><item><title>解决字幕组命名不规范问题：使用Episode-ReName工具</title><link>https://blog.ooooo.space/p/%E8%A7%A3%E5%86%B3%E5%AD%97%E5%B9%95%E7%BB%84%E5%91%BD%E5%90%8D%E4%B8%8D%E8%A7%84%E8%8C%83%E9%97%AE%E9%A2%98%E4%BD%BF%E7%94%A8episode-rename%E5%B7%A5%E5%85%B7/</link><pubDate>Sun, 15 May 2022 00:00:00 +0000</pubDate><guid>https://blog.ooooo.space/p/%E8%A7%A3%E5%86%B3%E5%AD%97%E5%B9%95%E7%BB%84%E5%91%BD%E5%90%8D%E4%B8%8D%E8%A7%84%E8%8C%83%E9%97%AE%E9%A2%98%E4%BD%BF%E7%94%A8episode-rename%E5%B7%A5%E5%85%B7/</guid><description>&lt;img src="https://gcore.jsdelivr.net/gh/shelken/picbed@main/uPic/2023-11/0sko2h.jpg" alt="Featured image of post 解决字幕组命名不规范问题：使用Episode-ReName工具" />&lt;h1 id="材料">材料
&lt;/h1>&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/Nriver/Episode-ReName" title="Episode-ReName"
target="_blank" rel="noopener"
>Episode-ReName&lt;/a>（以下简称 er）&lt;/li>
&lt;li>&lt;a class="link" href="https://zh.wikipedia.org/zh-cn/QBittorrent" title="qBittorrent"
target="_blank" rel="noopener"
>qBittorrent&lt;/a>（以下简称 qb）&lt;/li>
&lt;/ul>
&lt;h1 id="背景">背景
&lt;/h1>&lt;p>很多字幕组种子的命名格式往往不是按照&lt;code>SxxExx&lt;/code>的格式来命名的，而 Emby，Plex 等媒体服务器都是以识别&lt;code>SxxExx&lt;/code>来刮削剧集的元数据。因此为了让这些媒体服务器识别剧集，我们往往需要重命名下载的文件。&lt;/p>
&lt;h1 id="期望">期望
&lt;/h1>&lt;p>qb 下载剧集后，自动将不符合的资源名命名为形如&lt;code>'剧集名 - SxxExx.mp4'&lt;/code>&lt;/p>
&lt;h1 id="实践">实践
&lt;/h1>&lt;h2 id="流程">流程
&lt;/h2>&lt;ol>
&lt;li>克隆 er 源代码,使用 pyinstaller 将 EpisodeReName.py 编译成可执行程序。（作者在原仓库有提供 windows 的，win 用户可以直接下载使用，我是 linux 环境，因此自己编译）,将可执行程序放到你想要它在的文件夹下面（我直接上传群晖下的文件夹）&lt;/li>
&lt;li>设置 qb 下的「Torrent 完成时运行外部程序」，填入程序路径和必要参数&lt;/li>
&lt;/ol>
&lt;h2 id="编译可执行程序">编译可执行程序
&lt;/h2>&lt;p>win 用户跳过此步骤，直接在原仓库下载作者提供的程序；linux 用户可以直接在本地使用 pyinstaller 来操作编译（docker 也行）。如果是 mac 用户则可以使用 docker 镜像来编译 linux 程序。m1 用户建议换台电脑，目前 docker 镜像编译有问题&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /你的工作目录
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 拉取源代码&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git clone https://github.com/Nriver/Episode-ReName.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> Episode-ReName
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 安装所需 requirements （requirements中包含了pyinstaller，如果是docker编译，可以把pyinstaller去掉）&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pip3 install -r requirements.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 编译（非docker方式）&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pyinstaller -F EpisodeReName.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 编译（docker方式）&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker run -v &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>&lt;span class="nb">pwd&lt;/span>&lt;span class="k">)&lt;/span>&lt;span class="s2">:/src/&amp;#34;&lt;/span> cdrx/pyinstaller-linux
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 移动编译后程序到你想要的文件夹。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mv ./dist/linux/EpisodeReName anywhere
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 我是在mac上编译的，因此把它复制到我的群晖上&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">scp ./dist/linux/EpisodeReName shelken@192.168.0.80:/volume1/docker/qb-web/script/Episode-ReName/dist/EpisodeReName
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="设置-qb-执行程序">设置 qb 执行程序
&lt;/h2>&lt;p>打开工具-&amp;gt;选项-&amp;gt;下载。开启「Torrent 完成时运行外部程序」，填入你的程序地址&lt;/p>
&lt;p>&lt;img src="https://gcore.jsdelivr.net/gh/shelken/picbed@main/PicGo/2023-11/a8fd15af.png"
loading="lazy"
alt="image-20220515171458914"
>&lt;/p>
&lt;p>参数解释：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">qb参数：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">%F：如果种子是单文件的，那么输出则为：/保存路径/xxxxx.mp4；如果是多文件。那么则会是: /保存路径/根目录名。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">er参数：（这部分详细可以去看原文档，这里只介绍我使用的）
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--path：目标路径，可以是单文件，可以是目录，目录会处理所有该目录下文件
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--delay: 延迟多久操作，默认为0秒不等待，这个参数主要是配合qbitorrent使用, 避免qb锁定文件导致重命名失败. 一般停止做种15秒后在操作能确保文件被释放
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--name_format：自定义重命名格式, 参数需要加引号 默认为 &amp;#34;S{season}E{ep}&amp;#34; 可以选择性加入 series系列名称 如 &amp;#34;{series} - S{season}E{ep}&amp;#34;。这里我使用了第二种格式。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">举例:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/volume1/docker/qb-web/script/Episode-ReName/dist/EpisodeReName --path=&amp;#34;%F&amp;#34; --delay=15 --name_format=&amp;#34;{series} - S{season}E{ep}&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="技巧">技巧
&lt;/h1>&lt;h2 id="查看-qb-日志">查看 qb 日志
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># volume1：取决于你套件安装在哪个存储空间&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cat /volume1/&lt;span class="se">\@&lt;/span>appstore/qBittorrent/qBittorrent_conf/data/logs/qbittorrent.log
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="给可执行程序赋权">给可执行程序赋权
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 如果不能执行程序，尝试给EpisodeReName执行程序赋予可执行权限&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chmod +x /所在目录/EpisodeReName
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="多季番剧tmdb集数适配">多季番剧tmdb集数适配
&lt;/h2>&lt;p>对于有多季的番剧, 比如鬼灭之刃28集, 在tmdb里没有第28集, 而是第2季第2集, 要正确削刮需要从S02E28改成S02E02.&lt;/p>
&lt;p>这时候可以在鬼灭之刃的&lt;code>Season 2&lt;/code>文件夹中添加一个&lt;code>all.txt&lt;/code>文件, 里面写上一个数字, 会在自动重命名的时候减掉这个数字. 比如上面的例子就需要在&lt;code>all.txt&lt;/code>填入26, 自动重命名就会把S02E28改成S02E02, 这样就能正常削刮了.&lt;/p>
&lt;h1 id="注意">注意
&lt;/h1>&lt;h2 id="文件夹命名格式">文件夹命名格式
&lt;/h2>&lt;p>剧名和季数是根据文件夹命名来识别的，集数是根据文件名的数字。&lt;/p>
&lt;h3 id="剧名与季数">剧名与季数
&lt;/h3>&lt;p>形如：/剧集目录/剧名/Season 1/&lt;/p>
&lt;p>季数命名格式要求：Season1 / Season 1 / s1 / S1&lt;/p>
&lt;p>举例：/volume1/Video/watch/夏日重现/s1&lt;/p>
&lt;h3 id="集数">集数
&lt;/h3>&lt;p>形如：/剧集目录/剧名/Season 1/xxxx[01]xxxxxx.mp4&lt;/p>
&lt;p>集数命名匹配的正则：会匹配在括号（各种括号）内的数字，数字规则如下，以找到的第一个符合项作为集数&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">patterns&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 1到4位数字&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;(\d{1,4}(\.5)?)&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 特殊文字处理&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;第(\d{1,4}(\.5)?)集&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;第(\d{1,4}(\.5)?)话&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;第(\d{1,4}(\.5)?)話&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;[Ee][Pp](\d{1,4}(\.5 &amp;#34;Ee][Pp&amp;#34;)?)&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;[Ee](\d{1,4}(\.5 &amp;#34;Ee&amp;#34;)?)&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 兼容SP01等命名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;[Ss][Pp](\d{1,4}(\.5 &amp;#34;Ss][Pp&amp;#34;)?)&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 兼容v2命名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;(\d{1,4}(\.5)?)[Vv]?\d?&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>举例:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 输入：/volume1/Video/watch/夏日重现/s1/[Nekomoe kissaten][Summer Time Rendering][05][1080p][JPSC].mp4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 输出：/volume1/Video/watch/夏日重现/s1/夏日重现 - S01E05.mp4&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="做种问题">做种问题
&lt;/h2>&lt;p>qb 的「Torrent 完成时运行外部程序」功能，会在下载完资源的时候，立刻去执行程序，也就是说在下载完之后，我们的文件会被立刻重命名，这导致了我们做种会出现问题，因此我们无法做到下载后再把这个资源分享给其他人。目前也没有好的方式解决。可以考虑不是呀 qb 的这个功能，直接定时任务去执行程序，扫描固定的目录来重命名。&lt;/p></description></item></channel></rss>